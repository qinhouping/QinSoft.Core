<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QinSoft.Core.Data</name>
    </assembly>
    <members>
        <member name="T:QinSoft.Core.Data.Database.DatabaseContextAttribute">
            <summary>
            数据库上下文特性
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseContextAttribute.Name">
            <summary>
            上下文名称
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseContextAttribute.UseTran">
            <summary>
            是否使用事务
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.DatabaseContextInterceptor">
            <summary>
            数据上下文拦截器，支持多数据源切换
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseContextInterceptor.DatabaseManager">
            <summary>
            数据库管理器
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseContextInterceptor.DatabaseContextStack">
            <summary>
            数据上下文栈
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseContextInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
            拦截处理
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseContextInterceptor.GetDatabaseContext(Castle.DynamicProxy.IInvocation)">
            <summary>
            获取拦截上下文
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.DatabaseContextStack">
            <summary>
            上下文栈
            必现单例注入
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseContextStack.Instance">
            <summary>
            单例模式，内部使用
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseContextStack.ContextStack">
            <summary>
            上下文栈
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseContextStack.DefaultContext">
            <summary>
            默认上下文
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseContextStack.DatabaseManager">
            <summary>
            数据库管理器
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseContextStack.Push(SqlSugar.ISqlSugarClient)">
            <summary>
            入栈
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseContextStack.Pop">
            <summary>
            出栈
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseContextStack.Peek">
            <summary>
            出栈（不移除）
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseContextStack.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.DatabaseException">
            <summary>
            数据库异常
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.DatabaseManager">
            <summary>
            Database管理器
            集成缓存配置，支持多数据源
            </summary>
        </member>
        <member name="F:QinSoft.Core.Data.Database.DatabaseManager.logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseManager.DatabaseManagerConfig">
            <summary>
            Database配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseManager.GetDatabaseItemConfig(System.String)">
            <summary>
            获取缓存配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseManager.GetDefaultDatabaseItemConfig">
            <summary>
            获取默认缓存配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseManager.BuildClientFromConfig(QinSoft.Core.Data.Database.DatabaseItemConfig)">
            <summary>
            构建Database客户端实例
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseManager.GetDatabase">
            <summary>
            获取数据库客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseManager.GetDatabaseAsync">
            <summary>
            获取数据库客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseManager.GetDatabase(System.String)">
            <summary>
            获取数据库客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseManager.GetDatabaseAsync(System.String)">
            <summary>
            获取数据库客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseManager.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.DatabaseManagerConfig">
            <summary>
            数据库管理器配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseManagerConfig.Primary">
            <summary>
            默认数据库配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseManagerConfig.Items">
            <summary>
            数据库配置列表
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseManagerConfig.GetByName(System.String)">
            <summary>
            根据指定名称的本地缓存配置项
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.DatabaseItemConfig">
            <summary>
            数据库配置项
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseItemConfig.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseItemConfig.Configs">
            <summary>
            数据库连接配置
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.DatabaseConnectionConfig">
            <summary>
            数据库主连接配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseConnectionConfig.ConfigId">
            <summary>
            配置ID
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseConnectionConfig.DbType">
            <summary>
            数据库类型
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseConnectionConfig.ConnectionString">
            <summary>
            主库连接字符串
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseConnectionConfig.IsAutoCloseConnection">
            <summary>
            自动关闭连接
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseConnectionConfig.IsShardSameThread">
            <summary>
            相同线程共享
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseConnectionConfig.Slaves">
            <summary>
            从库配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseConnectionConfig.MoreSetting">
            <summary>
            扩展配置
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.DatabaseSlaveConnectionConfig">
            <summary>
            数据库从连接配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseSlaveConnectionConfig.HitRate">
            <summary>
            命中率
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseSlaveConnectionConfig.ConnectionString">
            <summary>
            从库连接字符串
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.DatabaseConnectionMoreSetting">
            <summary>
            数据库连接额外配置
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.DatabaseManagerOptions">
            <summary>
            数据库管理选项
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseManagerOptions.ConfigName">
            <summary>
            配置名称，默认"DatabaseManagerConfig"
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseManagerOptions.ConfigFormat">
            <summary>
            配置格式，默认"ConfigFormat.XML"
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.DatabaseRepository`1">
            <summary>
            数据库仓库基类
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.DatabaseRepository`1.Client">
            <summary>
            当前上下文数据库客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Insert(`0,System.Action{SqlSugar.IInsertable{`0}})">
            <summary>
            插入实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.InsertAsync(`0,System.Action{SqlSugar.IInsertable{`0}})">
            <summary>
            插入实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Insert(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.IInsertable{`0}})">
            <summary>
            批量插入实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.InsertAsync(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.IInsertable{`0}})">
            <summary>
            批量插入实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Update(System.Action{SqlSugar.IUpdateable{`0}})">
            <summary>
            更新实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.UpdateAsync(System.Action{SqlSugar.IUpdateable{`0}})">
            <summary>
            更新实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Update(`0,System.Action{SqlSugar.IUpdateable{`0}})">
            <summary>
            更新实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.UpdateAsync(`0,System.Action{SqlSugar.IUpdateable{`0}})">
            <summary>
            更新实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Update(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.IUpdateable{`0}})">
            <summary>
            批量更新实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.UpdateAsync(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.IUpdateable{`0}})">
            <summary>
            批量更新实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Save(`0,System.Action{SqlSugar.ISaveable{`0}})">
            <summary>
            保存实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.SaveAsync(`0,System.Action{SqlSugar.ISaveable{`0}})">
            <summary>
            保存实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Save(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.ISaveable{`0}})">
            <summary>
            批量保存实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.SaveAsync(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.ISaveable{`0}})">
            <summary>
            批量保存实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Delete(System.Action{SqlSugar.IDeleteable{`0}})">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.DeleteAsync(System.Action{SqlSugar.IDeleteable{`0}})">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Delete(System.Object[])">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.DeleteAsync(System.Object[])">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Delete(`0,System.Action{SqlSugar.IDeleteable{`0}})">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.DeleteAsync(`0,System.Action{SqlSugar.IDeleteable{`0}})">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Delete(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.IDeleteable{`0}})">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.DeleteAsync(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.IDeleteable{`0}})">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Select(System.Action{SqlSugar.ISugarQueryable{`0}})">
            <summary>
            查询实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.SelectAsync(System.Action{SqlSugar.ISugarQueryable{`0}})">
            <summary>
            查询实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.SelectOne(System.Object[])">
            <summary>
            查询实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.SelectOneAsync(System.Object[])">
            <summary>
            查询实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.SelectOne(System.Action{SqlSugar.ISugarQueryable{`0}})">
            <summary>
            查询实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.SelectOneAsync(System.Action{SqlSugar.ISugarQueryable{`0}})">
            <summary>
            查询实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.Count(System.Action{SqlSugar.ISugarQueryable{`0}})">
            <summary>
            计数
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.DatabaseRepository`1.CountAsync(System.Action{SqlSugar.ISugarQueryable{`0}})">
            <summary>
            计数
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.IDatabaseContextStack">
            <summary>
            数据库上下文接口
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseContextStack.Push(SqlSugar.ISqlSugarClient)">
            <summary>
            入栈
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseContextStack.Pop">
            <summary>
            出栈
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseContextStack.Peek">
            <summary>
            出栈（不移除）
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.IDatabaseManager">
            <summary>
            数据库管理器接口
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseManager.GetDatabase">
            <summary>
            获取数据库客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseManager.GetDatabaseAsync">
            <summary>
            获取数据库客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseManager.GetDatabase(System.String)">
            <summary>
            获取数据库客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseManager.GetDatabaseAsync(System.String)">
            <summary>
            获取数据库客户端
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Database.IDatabaseRepository`1">
            <summary>
            数据库仓库接口
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Database.IDatabaseRepository`1.Client">
            <summary>
            当前上下文数据库客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Insert(`0,System.Action{SqlSugar.IInsertable{`0}})">
            <summary>
            插入实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.InsertAsync(`0,System.Action{SqlSugar.IInsertable{`0}})">
            <summary>
            插入实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Insert(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.IInsertable{`0}})">
            <summary>
            批量插入实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.InsertAsync(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.IInsertable{`0}})">
            <summary>
            批量插入实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Update(System.Action{SqlSugar.IUpdateable{`0}})">
            <summary>
            更新实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.UpdateAsync(System.Action{SqlSugar.IUpdateable{`0}})">
            <summary>
            更新实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Update(`0,System.Action{SqlSugar.IUpdateable{`0}})">
            <summary>
            更新实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.UpdateAsync(`0,System.Action{SqlSugar.IUpdateable{`0}})">
            <summary>
            更新实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Update(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.IUpdateable{`0}})">
            <summary>
            批量更新实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.UpdateAsync(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.IUpdateable{`0}})">
            <summary>
            批量更新实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Save(`0,System.Action{SqlSugar.ISaveable{`0}})">
            <summary>
            保存实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Save(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.ISaveable{`0}})">
            <summary>
            批量保存实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.SaveAsync(`0,System.Action{SqlSugar.ISaveable{`0}})">
            <summary>
            保存实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.SaveAsync(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.ISaveable{`0}})">
            <summary>
            批量保存实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Delete(System.Action{SqlSugar.IDeleteable{`0}})">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.DeleteAsync(System.Action{SqlSugar.IDeleteable{`0}})">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Delete(System.Object[])">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.DeleteAsync(System.Object[])">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Delete(`0,System.Action{SqlSugar.IDeleteable{`0}})">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.DeleteAsync(`0,System.Action{SqlSugar.IDeleteable{`0}})">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Delete(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.IDeleteable{`0}})">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.DeleteAsync(System.Collections.Generic.IEnumerable{`0},System.Action{SqlSugar.IDeleteable{`0}})">
            <summary>
            移除实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Select(System.Action{SqlSugar.ISugarQueryable{`0}})">
            <summary>
            查询实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.SelectAsync(System.Action{SqlSugar.ISugarQueryable{`0}})">
            <summary>
            查询实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.SelectOne(System.Object[])">
            <summary>
            查询实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.SelectOneAsync(System.Object[])">
            <summary>
            查询实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.SelectOne(System.Action{SqlSugar.ISugarQueryable{`0}})">
            <summary>
            查询实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.SelectOneAsync(System.Action{SqlSugar.ISugarQueryable{`0}})">
            <summary>
            查询实体
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.Count(System.Action{SqlSugar.ISugarQueryable{`0}})">
            <summary>
            计数
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Database.IDatabaseRepository`1.CountAsync(System.Action{SqlSugar.ISugarQueryable{`0}})">
            <summary>
            计数
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Elasticsearch.ElasticsearchContext">
            <summary>
            elasticsearch上下文
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:QinSoft.Core.Data.Elasticsearch.ElasticsearchContext.Instance" -->
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchContext.DefaultContext">
            <summary>
            默认上下文
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchContext.Get">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchContext.Get(System.String)">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchContext.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Elasticsearch.ElasticsearchContextInterceptor">
            <summary>
            elasticsearch上下文拦截器
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchContextInterceptor.ElasticsearchManager">
            <summary>
            数据库管理器
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchContextInterceptor.ElasticsearchContext">
            <summary>
            数据上下文栈
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchContextInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
            拦截处理
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Elasticsearch.ElasticsearchIndexAttribute">
            <summary>
            elasticsearch索引特性
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchIndexAttribute.Name">
            <summary>
            上下文名称
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchIndexAttribute.IndexName">
            <summary>
            索引名称
            </summary>
        </member>
        <member name="F:QinSoft.Core.Data.Elasticsearch.ElasticsearchManager.CacheDictionary">
            <summary>
            缓存字典
            </summary>
        </member>
        <member name="F:QinSoft.Core.Data.Elasticsearch.ElasticsearchManager.logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchManager.ElasticsearchManagerConfig">
            <summary>
            Database配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchManager.GetElasticsearchItemConfig(System.String)">
            <summary>
            获取缓存配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchManager.GetDefaultElasticsearchItemConfig">
            <summary>
            获取默认缓存配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchManager.BuildClientFromConfig(QinSoft.Core.Data.Elasticsearch.ElasticsearchItemConfig)">
            <summary>
            构建elasticsearch客户端实例
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchManager.GetElasticsearch">
            <summary>
            获取elasticsearch客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchManager.GetElasticsearchAsync">
            <summary>
            获取elasticsearch客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchManager.GetElasticsearch(System.String)">
            <summary>
            获取elasticsearch客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchManager.GetElasticsearchAsync(System.String)">
            <summary>
            获取elasticsearch客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchManager.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Elasticsearch.ElasticsearchManagerConfig">
            <summary>
            elasticsearch管理器配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchManagerConfig.Primary">
            <summary>
            默认配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchManagerConfig.Items">
            <summary>
            elasticsearch配置列表
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchManagerConfig.GetByName(System.String)">
            <summary>
            根据指定名称的本地缓存配置项
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Elasticsearch.ElasticsearchItemConfig">
            <summary>
            数据库配置项
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchItemConfig.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchItemConfig.Urls">
            <summary>
            elasticsearch地址
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchItemConfig.Username">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchItemConfig.Password">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchItemConfig.ApiKey">
            <summary>
            认证令牌
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchItemConfig.DefaultIndexName">
            <summary>
            elasticsearch默认索引
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchItemConfig.RequestTimeout">
            <summary>
            elasticsearch请求超时，默认60秒
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Elasticsearch.ElasticsearchManagerOptions">
            <summary>
            elasticsearch管理选项
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchManagerOptions.ConfigName">
            <summary>
            配置名称，默认"ElasticsearchManagerConfig"
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchManagerOptions.ConfigFormat">
            <summary>
            配置格式，默认"ConfigFormat.XML"
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1">
            <summary>
            elasticsearch仓库基类
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.Client">
            <summary>
            当前上下文elasticsearch客户端
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.IndexName">
            <summary>
            索引名
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.Index(`0)">
            <summary>
            索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.Index(System.String,`0)">
            <summary>
            索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.IndexAsync(`0)">
            <summary>
            索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.IndexAsync(System.String,`0)">
            <summary>
            索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.BulkIndex(`0[])">
            <summary>
            批量索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.BulkIndex(System.Func{`0,System.String},`0[])">
            <summary>
            批量索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.BulkIndexAsync(`0[])">
            <summary>
            批量索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.BulkIndexAsync(System.Func{`0,System.String},`0[])">
            <summary>
            批量索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.Delete(System.String)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.DeleteAsync(System.String)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.BulkDelete(System.String[])">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.BulkDeleteAsync(System.String[])">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.Update(System.String,`0)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.UpdateAsync(System.String,`0)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.BulkUpdate(System.Func{`0,System.String},`0[])">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.BulkUpdateAsync(System.Func{`0,System.String},`0[])">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.Upsert(System.String,`0)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.UpsertAsync(System.String,`0)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.BulkUpsert(System.Func{`0,System.String},`0[])">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.BulkUpsertAsync(System.Func{`0,System.String},`0[])">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.Update``1(System.String,``0)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.UpdateAsync``1(System.String,``0)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.BulkUpdate``1(System.Func{``0,System.String},``0[])">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.BulkUpdateAsync``1(System.Func{``0,System.String},``0[])">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.Count(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            文档计数
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.Get(System.String)">
            <summary>
            获取文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.GetAsync(System.String)">
            <summary>
            获取文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.Search(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer},System.Func{Nest.SortDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.ISort}}},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.ElasticsearchRepository`1.SearchAsync(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer},System.Func{Nest.SortDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.ISort}}},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Elasticsearch.IElasticsearchContext">
            <summary>
            mongodb上下文
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchContext.Get">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchContext.Get(System.String)">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchManager.GetElasticsearch">
            <summary>
            获取elasticsearch客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchManager.GetElasticsearchAsync">
            <summary>
            获取elasticsearch客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchManager.GetElasticsearch(System.String)">
            <summary>
            获取elasticsearch客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchManager.GetElasticsearchAsync(System.String)">
            <summary>
            获取elasticsearch客户端
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1">
            <summary>
            elasticsearch仓库接口
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.Index(`0)">
            <summary>
            索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.Index(System.String,`0)">
            <summary>
            索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.IndexAsync(`0)">
            <summary>
            索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.IndexAsync(System.String,`0)">
            <summary>
            索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.BulkIndex(`0[])">
            <summary>
            批量索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.BulkIndex(System.Func{`0,System.String},`0[])">
            <summary>
            批量索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.BulkIndexAsync(`0[])">
            <summary>
            批量索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.BulkIndexAsync(System.Func{`0,System.String},`0[])">
            <summary>
            批量索引文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.Delete(System.String)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.DeleteAsync(System.String)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.BulkDelete(System.String[])">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.BulkDeleteAsync(System.String[])">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.Update(System.String,`0)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.UpdateAsync(System.String,`0)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.BulkUpdate(System.Func{`0,System.String},`0[])">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.BulkUpdateAsync(System.Func{`0,System.String},`0[])">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.Upsert(System.String,`0)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.UpsertAsync(System.String,`0)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.BulkUpsert(System.Func{`0,System.String},`0[])">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.BulkUpsertAsync(System.Func{`0,System.String},`0[])">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.Update``1(System.String,``0)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.UpdateAsync``1(System.String,``0)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.BulkUpdate``1(System.Func{``0,System.String},``0[])">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.BulkUpdateAsync``1(System.Func{``0,System.String},``0[])">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.Count(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            文档计数
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.Get(System.String)">
            <summary>
            获取文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.GetAsync(System.String)">
            <summary>
            获取文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.Search(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer},System.Func{Nest.SortDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.ISort}}},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Elasticsearch.IElasticsearchRepository`1.SearchAsync(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer},System.Func{Nest.SortDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.ISort}}},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.MongoDB.Core.MongoDBClient">
            <summary>
            Mongo数据库客户端
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.Core.MongoDBClient.DefaultDBName">
            <summary>
            默认数据库名称
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBClient.GetDatabase(MongoDB.Driver.MongoDatabaseSettings)">
            <summary>
            获取默认数据库
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1">
            <summary>
            mongodb仓库接口
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.Database">
            <summary>
            当前上下文数据库
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.CreateFilterDefinition(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            创建过滤定义
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.CreateFilterDefinition(`0)">
            <summary>
            创建过滤定义
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.CreateUpdateDefinition(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            创建更新定义
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.CreateUpdateDefinition(`0)">
            <summary>
            创建更新定义
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.InsertOne(`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <summary>
            插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.InsertOneAsync(`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <summary>
            插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.InsertMany(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <summary>
            批量插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.InsertManyAsync(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <summary>
            批量插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.UpdateOne(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.UpdateOneAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.UpdateMany(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.UpdateManyAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.UpdateOne(`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.UpdateOneAsync(`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.DeleteOne(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.DeleteOneAsync(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.DeleteOne(`0,System.Threading.CancellationToken)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.DeleteOneAsync(`0,System.Threading.CancellationToken)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.DeleteMany(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.DeleteManyAsync(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.Find(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.SortDefinition{`0},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.FindAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.SortDefinition{`0},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.FindOne(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.FindOneAsync(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.FindOne(`0)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.FindOneAsync(`0)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.Count(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            计数文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.CountAsync(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            计数文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.BulkWrite(System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            批量操作文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.BulkWriteAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            批量操作文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.BulkInsert(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            批量插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.BulkInsertAsync(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            批量插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.BulkUpdate(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            批量插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.IMongoDBRepository`1.BulkUpdateAsync(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            批量插入文档
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1">
            <summary>
            mongodb仓库基类
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.Database">
            <summary>
            当前上下文数据库
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.Collection">
            <summary>
            当前上下文集合
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.CreateFilterDefinition(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            创建过滤定义
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.CreateFilterDefinition(`0)">
            <summary>
            创建过滤定义
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.CreateUpdateDefinition(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            创建更新定义
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.CreateUpdateDefinition(`0)">
            <summary>
            创建更新定义
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.InsertOne(`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <summary>
            插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.InsertOneAsync(`0,MongoDB.Driver.InsertOneOptions,System.Threading.CancellationToken)">
            <summary>
            插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.InsertMany(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <summary>
            批量插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.InsertManyAsync(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.InsertManyOptions,System.Threading.CancellationToken)">
            <summary>
            批量插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.UpdateOne(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.UpdateOneAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.UpdateMany(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.UpdateManyAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.UpdateDefinition{`0},MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.UpdateOne(`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.UpdateOneAsync(`0,MongoDB.Driver.UpdateOptions,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.DeleteOne(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.DeleteOneAsync(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.DeleteOne(`0,System.Threading.CancellationToken)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.DeleteOneAsync(`0,System.Threading.CancellationToken)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.DeleteMany(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.DeleteManyAsync(MongoDB.Driver.FilterDefinition{`0},System.Threading.CancellationToken)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.Find(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.SortDefinition{`0},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.FindAsync(MongoDB.Driver.FilterDefinition{`0},MongoDB.Driver.SortDefinition{`0},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.FindOne(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.FindOneAsync(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.FindOne(`0)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.FindOneAsync(`0)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.Count(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            计数文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.CountAsync(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            计数文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.BulkWrite(System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            批量操作文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.BulkWriteAsync(System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteModel{`0}},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            批量操作文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.BulkInsert(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            批量插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.BulkInsertAsync(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            批量插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.BulkUpdate(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            批量插入文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.Core.MongoDBRepository`1.BulkUpdateAsync(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.BulkWriteOptions,System.Threading.CancellationToken)">
            <summary>
            批量插入文档
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.MongoDB.IMongoDBContext">
            <summary>
            mongodb上下文
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.IMongoDBContext.Get">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.IMongoDBContext.Get(System.String)">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.IMongoDBManager.GetMongoDB">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.IMongoDBManager.GetMongoDBAsync">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.IMongoDBManager.GetMongoDB(System.String)">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.IMongoDBManager.GetMongoDBAsync(System.String)">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.MongoDB.MongoDBCollectionAttribute">
            <summary>
            mongodb集合特性
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBCollectionAttribute.Name">
            <summary>
            上下文名称
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBCollectionAttribute.CollectionName">
            <summary>
            集合名称
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.MongoDB.MongoDBContext">
            <summary>
            mongodb上下文
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:QinSoft.Core.Data.MongoDB.MongoDBContext.Instance" -->
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBContext.DefaultContext">
            <summary>
            默认上下文
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBContext.Get">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBContext.Get(System.String)">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBContext.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.MongoDB.MongoDBContextInterceptor">
            <summary>
            mongodb拦截
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBContextInterceptor.MongoDBManager">
            <summary>
            数据库管理器
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBContextInterceptor.MongoDBContext">
            <summary>
            数据上下文栈
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBContextInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
            拦截处理
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.MongoDB.MongoDBManager">
            <summary>
            mongodb管理器
            集成缓存配置，支持多数据源
            </summary>
        </member>
        <member name="F:QinSoft.Core.Data.MongoDB.MongoDBManager.logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBManager.MongoDBManagerConfig">
            <summary>
            Database配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBManager.GetMongoDBItemConfig(System.String)">
            <summary>
            获取缓存配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBManager.GetDefaultMongoDBItemConfig">
            <summary>
            获取默认缓存配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBManager.BuildClientFromConfig(QinSoft.Core.Data.MongoDB.MongoDBItemConfig)">
            <summary>
            构建mongodb客户端实例
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBManager.GetMongoDB">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBManager.GetMongoDBAsync">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBManager.GetMongoDB(System.String)">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBManager.GetMongoDBAsync(System.String)">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBManager.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.MongoDB.MongoDBManagerConfig">
            <summary>
            Mongo管理器配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBManagerConfig.Primary">
            <summary>
            默认数据库配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBManagerConfig.Items">
            <summary>
            数据库配置列表
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.MongoDB.MongoDBManagerConfig.GetByName(System.String)">
            <summary>
            根据指定名称的本地缓存配置项
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.MongoDB.MongoDBItemConfig">
            <summary>
            数据库配置项
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBItemConfig.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBItemConfig.ConnectionString">
            <summary>
            mongodb连接配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBItemConfig.DefaultDBName">
            <summary>
            mongodb默认数据库名
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.MongoDB.MongoDBManagerOptions">
            <summary>
            mongodb管理选项
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBManagerOptions.ConfigName">
            <summary>
            配置名称，默认"MongoDBManagerConfig"
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.MongoDB.MongoDBManagerOptions.ConfigFormat">
            <summary>
            配置格式，默认"ConfigFormat.XML"
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Solr.ISolrContext">
            <summary>
            solr上下文
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrContext.Get``1(System.String)">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrContext.Get``1(System.String,System.String)">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrManager.GetSolr``1(System.String)">
            <summary>
            获取Solr客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrManager.GetSolrAsync``1(System.String)">
            <summary>
            获取Solr客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrManager.GetSolr``1(System.String,System.String)">
            <summary>
            获取Solr客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrManager.GetSolrAsync``1(System.String,System.String)">
            <summary>
            获取Solr客户端
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Solr.ISolrRepository`1">
            <summary>
            Solr仓库接口
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.ISolrRepository`1.Client">
            <summary>
            当前上下文Solr客户端
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.ISolrRepository`1.CoreName">
            <summary>
            核心名
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.Add(`0,SolrNet.AddParameters)">
            <summary>
            保存文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.AddRange(`0[],SolrNet.AddParameters)">
            <summary>
            保存文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.AddAsync(`0,SolrNet.AddParameters)">
            <summary>
            保存文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.AddRangeAsync(`0[],SolrNet.AddParameters)">
            <summary>
            保存文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.Delete(`0,SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.Delete(`0[],SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.Delete(System.String,SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.Delete(System.String[],SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.Delete(SolrNet.ISolrQuery,SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.DeleteAsync(`0,SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.DeleteAsync(`0[],SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.DeleteAsync(System.String,SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.DeleteAsync(System.String[],SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.DeleteAsync(SolrNet.ISolrQuery,SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.Commit">
            <summary>
            提交操作
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.CommitAsync">
            <summary>
            提交操作
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.Query(System.String,SolrNet.Commands.Parameters.QueryOptions)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.Query(SolrNet.ISolrQuery,SolrNet.Commands.Parameters.QueryOptions)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.Query(System.String,SolrNet.SortOrder[])">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.Query(SolrNet.ISolrQuery,SolrNet.SortOrder[])">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.QueryAsync(System.String,SolrNet.Commands.Parameters.QueryOptions,System.Threading.CancellationToken)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.QueryAsync(SolrNet.ISolrQuery,SolrNet.Commands.Parameters.QueryOptions,System.Threading.CancellationToken)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.QueryAsync(System.String,SolrNet.SortOrder[],System.Threading.CancellationToken)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.ISolrRepository`1.QueryAsync(SolrNet.ISolrQuery,SolrNet.SortOrder[],System.Threading.CancellationToken)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Solr.SolrContext">
            <summary>
            Solr上下文
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:QinSoft.Core.Data.Solr.SolrContext.Instance" -->
        <member name="P:QinSoft.Core.Data.Solr.SolrContext.DefaultContext">
            <summary>
            默认上下文
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrContext.Get``1(System.String)">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrContext.Get``1(System.String,System.String)">
            <summary>
            获取mongodb客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrContext.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Solr.SolrContextInterceptor">
            <summary>
            Solr上下文拦截器
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrContextInterceptor.SolrManager">
            <summary>
            数据库管理器
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrContextInterceptor.SolrContext">
            <summary>
            数据上下文栈
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrContextInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
            拦截处理
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Solr.SolrCoreAttribute">
            <summary>
            solr核心特性
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrCoreAttribute.Name">
            <summary>
            上下文名称
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrCoreAttribute.CoreName">
            <summary>
            核心名称
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Solr.SolrManager">
            <summary>
            Solr管理器
            集成缓存配置，支持多数据源
            </summary>
        </member>
        <member name="F:QinSoft.Core.Data.Solr.SolrManager.logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrManager.SolrManagerConfig">
            <summary>
            Solr配置
            </summary>
        </member>
        <member name="F:QinSoft.Core.Data.Solr.SolrManager.CacheDictionary">
            <summary>
            缓存字典
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrManager.GetSolrItemConfig(System.String)">
            <summary>
            获取配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrManager.GetDefaultSolrItemConfig">
            <summary>
            获取默认配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrManager.BuildClientFromConfig``1(QinSoft.Core.Data.Solr.SolrItemConfig,System.String)">
            <summary>
            构建Solr客户端实例
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrManager.GetSolr``1(System.String)">
            <summary>
            获取Solr客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrManager.GetSolrAsync``1(System.String)">
            <summary>
            获取Solr客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrManager.GetSolr``1(System.String,System.String)">
            <summary>
            获取Solr客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrManager.GetSolrAsync``1(System.String,System.String)">
            <summary>
            获取Solr客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrManager.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Solr.SolrManagerConfig">
            <summary>
            Solr管理器配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrManagerConfig.Primary">
            <summary>
            默认数据库配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrManagerConfig.Items">
            <summary>
            数据库配置列表
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrManagerConfig.GetByName(System.String)">
            <summary>
            根据指定名称的Solr配置项
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Solr.SolrItemConfig">
            <summary>
            Solr配置项
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrItemConfig.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrItemConfig.Url">
            <summary>
            solr地址
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrItemConfig.Username">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrItemConfig.Password">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Solr.SolrManagerOptions">
            <summary>
            Solr管理选项
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrManagerOptions.ConfigName">
            <summary>
            配置名称，默认"SolrManagerConfig"
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrManagerOptions.ConfigFormat">
            <summary>
            配置格式，默认"ConfigFormat.XML"
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Solr.SolrRepository`1">
            <summary>
            Solr仓库基类
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrRepository`1.Client">
            <summary>
            当前上下文Solr客户端
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Solr.SolrRepository`1.CoreName">
            <summary>
            核心名
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.Add(`0,SolrNet.AddParameters)">
            <summary>
            保存文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.AddRange(`0[],SolrNet.AddParameters)">
            <summary>
            保存文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.AddAsync(`0,SolrNet.AddParameters)">
            <summary>
            保存文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.AddRangeAsync(`0[],SolrNet.AddParameters)">
            <summary>
            保存文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.Delete(`0,SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.Delete(`0[],SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.Delete(System.String,SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.Delete(System.String[],SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.Delete(SolrNet.ISolrQuery,SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.DeleteAsync(`0,SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.DeleteAsync(`0[],SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.DeleteAsync(System.String,SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.DeleteAsync(System.String[],SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.DeleteAsync(SolrNet.ISolrQuery,SolrNet.DeleteParameters)">
            <summary>
            移除文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.Commit">
            <summary>
            提交操作
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.CommitAsync">
            <summary>
            提交操作
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.Query(System.String,SolrNet.Commands.Parameters.QueryOptions)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.Query(SolrNet.ISolrQuery,SolrNet.Commands.Parameters.QueryOptions)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.Query(System.String,SolrNet.SortOrder[])">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.Query(SolrNet.ISolrQuery,SolrNet.SortOrder[])">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.QueryAsync(System.String,SolrNet.Commands.Parameters.QueryOptions,System.Threading.CancellationToken)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.QueryAsync(SolrNet.ISolrQuery,SolrNet.Commands.Parameters.QueryOptions,System.Threading.CancellationToken)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.QueryAsync(System.String,SolrNet.SortOrder[],System.Threading.CancellationToken)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Solr.SolrRepository`1.QueryAsync(SolrNet.ISolrQuery,SolrNet.SortOrder[],System.Threading.CancellationToken)">
            <summary>
            查询文档
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Zookeeper.Core.IZookeeper">
            <summary>
            增加认证信息
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.AddAuthInfo(System.String,System.String)">
            <summary>
            增加认证信息
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.Create(System.String,System.String,org.apache.zookeeper.CreateMode,org.apache.zookeeper.data.ACL[])">
            <summary>
            创建节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.Create(System.String,System.String,org.apache.zookeeper.CreateMode)">
            <summary>
            创建节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.CreateAsync(System.String,System.String,org.apache.zookeeper.CreateMode,org.apache.zookeeper.data.ACL[])">
            <summary>
            创建节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.CreateAsync(System.String,System.String,org.apache.zookeeper.CreateMode)">
            <summary>
            创建节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.Delete(System.String,System.Int32)">
            <summary>
            删除节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.DeleteAsync(System.String,System.Int32)">
            <summary>
            删除节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.SetData(System.String,System.String,System.Int32)">
            <summary>
            设置节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.SetDataAsync(System.String,System.String,System.Int32)">
            <summary>
            设置节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetData(System.String,org.apache.zookeeper.Watcher)">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetData(System.String)">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetData(System.String,System.Boolean)">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetDataAsync(System.String,org.apache.zookeeper.Watcher)">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetDataAsync(System.String,System.Boolean)">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetDataAsync(System.String)">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.Exists(System.String,org.apache.zookeeper.Watcher)">
            <summary>
            判断是否存在节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.Exists(System.String,System.Boolean)">
            <summary>
            判断是否存在节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.Exists(System.String)">
            <summary>
            判断是否存在节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.ExistsAsync(System.String,org.apache.zookeeper.Watcher)">
            <summary>
            判断是否存在节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.ExistsAsync(System.String,System.Boolean)">
            <summary>
            判断是否存在节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.ExistsAsync(System.String)">
            <summary>
            判断是否存在节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.SetAcl(System.String,org.apache.zookeeper.data.ACL[])">
            <summary>
            设置ACL
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.SetAclAsync(System.String,org.apache.zookeeper.data.ACL[])">
            <summary>
            设置ACL
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetAcl(System.String)">
            <summary>
            获取ACL
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetAclAsync(System.String)">
            <summary>
            获取ACL
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetChildren(System.String,org.apache.zookeeper.Watcher)">
            <summary>
            获取子节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetChildren(System.String,System.Boolean)">
            <summary>
            获取子节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetChildren(System.String)">
            <summary>
            获取子节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetChildrenAsync(System.String,org.apache.zookeeper.Watcher)">
            <summary>
            获取子节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetChildrenAsync(System.String,System.Boolean)">
            <summary>
            获取子节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.IZookeeper.GetChildrenAsync(System.String)">
            <summary>
            获取子节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.AddAuthInfo(System.String,System.String)">
            <summary>
            增加认证信息
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.Create(System.String,System.String,org.apache.zookeeper.CreateMode,org.apache.zookeeper.data.ACL[])">
            <summary>
            创建节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.Create(System.String,System.String,org.apache.zookeeper.CreateMode)">
            <summary>
            创建节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.CreateAsync(System.String,System.String,org.apache.zookeeper.CreateMode,org.apache.zookeeper.data.ACL[])">
            <summary>
            创建节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.CreateAsync(System.String,System.String,org.apache.zookeeper.CreateMode)">
            <summary>
            创建节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.Delete(System.String,System.Int32)">
            <summary>
            删除节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.DeleteAsync(System.String,System.Int32)">
            <summary>
            删除节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.SetData(System.String,System.String,System.Int32)">
            <summary>
            设置节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.SetDataAsync(System.String,System.String,System.Int32)">
            <summary>
            设置节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetData(System.String,org.apache.zookeeper.Watcher)">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetData(System.String,System.Boolean)">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetData(System.String)">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetDataAsync(System.String,org.apache.zookeeper.Watcher)">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetDataAsync(System.String,System.Boolean)">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetDataAsync(System.String)">
            <summary>
            获取节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.Exists(System.String,org.apache.zookeeper.Watcher)">
            <summary>
            判断是否存在节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.Exists(System.String,System.Boolean)">
            <summary>
            判断是否存在节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.Exists(System.String)">
            <summary>
            判断是否存在节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.ExistsAsync(System.String,org.apache.zookeeper.Watcher)">
            <summary>
            判断是否存在节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.ExistsAsync(System.String,System.Boolean)">
            <summary>
            判断是否存在节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.ExistsAsync(System.String)">
            <summary>
            判断是否存在节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.SetAcl(System.String,org.apache.zookeeper.data.ACL[])">
            <summary>
            设置ACL
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.SetAclAsync(System.String,org.apache.zookeeper.data.ACL[])">
            <summary>
            设置ACL
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetAcl(System.String)">
            <summary>
            获取ACL
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetAclAsync(System.String)">
            <summary>
            获取ACL
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetChildren(System.String,org.apache.zookeeper.Watcher)">
            <summary>
            获取子节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetChildren(System.String,System.Boolean)">
            <summary>
            获取子节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetChildren(System.String)">
            <summary>
            获取子节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetChildrenAsync(System.String,org.apache.zookeeper.Watcher)">
            <summary>
            获取子节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetChildrenAsync(System.String,System.Boolean)">
            <summary>
            获取子节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.Core.Zookeeper.GetChildrenAsync(System.String)">
            <summary>
            获取子节点
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.IZookeeperManager.GetZookeeper">
            <summary>
            获取zookeeper客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.IZookeeperManager.GetZookeeperAsync">
            <summary>
            获取zookeeper客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.IZookeeperManager.GetZookeeper(System.String)">
            <summary>
            获取zookeeper客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.IZookeeperManager.GetZookeeperAsync(System.String)">
            <summary>
            获取zookeeper客户端
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Zookeeper.ZookeeperManager">
            <summary>
            zookeeper管理器
            集成缓存配置，支持多数据源
            </summary>
        </member>
        <member name="F:QinSoft.Core.Data.Zookeeper.ZookeeperManager.logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Zookeeper.ZookeeperManager.ZookeeperManagerConfig">
            <summary>
            zookeeper配置
            </summary>
        </member>
        <member name="F:QinSoft.Core.Data.Zookeeper.ZookeeperManager.CacheDictionary">
            <summary>
            缓存字典
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.ZookeeperManager.GetZookeeperItemConfig(System.String)">
            <summary>
            获取配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.ZookeeperManager.GetDefaultZookeeperItemConfig">
            <summary>
            获取默认配置
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.ZookeeperManager.BuildClientFromConfig(QinSoft.Core.Data.Zookeeper.ZookeeperItemConfig)">
            <summary>
            构建zookeeper客户端实例
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.ZookeeperManager.GetZookeeper">
            <summary>
            获取zookeeper客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.ZookeeperManager.GetZookeeperAsync">
            <summary>
            获取zookeeper客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.ZookeeperManager.GetZookeeper(System.String)">
            <summary>
            获取zookeeper客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.ZookeeperManager.GetZookeeperAsync(System.String)">
            <summary>
            获取zookeeper客户端
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.ZookeeperManager.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Zookeeper.ZookeeperManagerConfig">
            <summary>
            Zookeeper管理器配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Zookeeper.ZookeeperManagerConfig.Primary">
            <summary>
            默认数据库配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Zookeeper.ZookeeperManagerConfig.Items">
            <summary>
            数据库配置列表
            </summary>
        </member>
        <member name="M:QinSoft.Core.Data.Zookeeper.ZookeeperManagerConfig.GetByName(System.String)">
            <summary>
            根据指定名称的Zookeeper配置项
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Zookeeper.ZookeeperItemConfig">
            <summary>
            Zookeeper配置项
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Zookeeper.ZookeeperItemConfig.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Zookeeper.ZookeeperItemConfig.ConnectionString">
            <summary>
            Zookeeper连接配置
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Zookeeper.ZookeeperItemConfig.SessionTimeout">
            <summary>
            Zookeeper超时
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Zookeeper.ZookeeperItemConfig.AuthInfos">
            <summary>
            Zookeeper连接配置
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Zookeeper.ZookeeperAuthConfig">
            <summary>
            Zookeeper认证配置
            </summary>
        </member>
        <member name="T:QinSoft.Core.Data.Zookeeper.ZookeeperManagerOptions">
            <summary>
            zookeeper管理选项
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Zookeeper.ZookeeperManagerOptions.ConfigName">
            <summary>
            配置名称，默认"ZookeeperManagerConfig"
            </summary>
        </member>
        <member name="P:QinSoft.Core.Data.Zookeeper.ZookeeperManagerOptions.ConfigFormat">
            <summary>
            配置格式，默认"ConfigFormat.XML"
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.DataServiceCollectionExtensions">
            <summary>
            数据服务依赖注入扩展
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DataServiceCollectionExtensions.AddDatabaseManager(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注入Database
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DataServiceCollectionExtensions.AddDatabaseManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{QinSoft.Core.Data.Database.DatabaseManagerOptions})">
            <summary>
            注入Database
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DataServiceCollectionExtensions.AddMongoDBManager(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注入MongoDB
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DataServiceCollectionExtensions.AddMongoDBManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{QinSoft.Core.Data.MongoDB.MongoDBManagerOptions})">
            <summary>
            注入MongoDB
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DataServiceCollectionExtensions.AddElasticsearchManager(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注入Elasticsearch
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DataServiceCollectionExtensions.AddElasticsearchManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{QinSoft.Core.Data.Elasticsearch.ElasticsearchManagerOptions})">
            <summary>
            注入Elasticsearch
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DataServiceCollectionExtensions.AddZookeeperManager(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注入Zookeeper
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DataServiceCollectionExtensions.AddZookeeperManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{QinSoft.Core.Data.Zookeeper.ZookeeperManagerOptions})">
            <summary>
            注入Zookeeper
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DataServiceCollectionExtensions.AddSolrManager(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            注入Solr
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.DataServiceCollectionExtensions.AddSolrManager(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{QinSoft.Core.Data.Solr.SolrManagerOptions})">
            <summary>
            注入Solr
            </summary>
        </member>
    </members>
</doc>
